#!/usr/bin/env ruby
# frozen_string_literal: true

ruby_path = (`which ruby`).sub("/bin/ruby", "").chomp
full_version = (`ruby --version`).match(/((?:\d+\.){2}\d+p\d+)/)[1]
ruby_version, patchlevel = full_version.split("p")

if (path = ruby_path.split("/").last) != ruby_version
  puts("ABORTING: Ruby path doesn't match currenty Ruby version #{path}, #{ruby_version}")
  exit(1)
end

puts("Installing `archive-tar-minitar` gem")
puts(`gem install archive-tar-minitar`)

puts("Switching to #{ruby_path}")
Dir.chdir(ruby_path) do
  puts("Installing debase-ruby_core_source gem")
  puts(`bin/gem install debase-ruby_core_source --pre`)

  install_dir = (`bin/gem env`).match("- INSTALLATION DIRECTORY: (.*)")[1]
  debase_path = Dir["#{install_dir}/gems/debase-ruby_core_source*"].first
  puts("Switching to debase-ruby_corce_source: #{debase_path}")

  Dir.chdir(debase_path) do
    puts("Bundle install")
    puts(`bundle install`)
    puts("Adding source")
    `VERSION=#{ruby_version} PATCH_LEVEL=#{patchlevel} rake add_source`
  end

  Dir.chdir(ruby_path) do
    puts(`bin/gem install debase --pre`)
    puts(`bin/gem install ruby-debug-ide --pre`)
  end
end
